package ${package.Controller};

import com.baomidou.mybatisplus.core.metadata.IPage;
import ${package.Controller}.query.${entity}Query;
import xyz.iotcode.iadmin.common.validated.Insert;
import xyz.iotcode.iadmin.common.validated.Update;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.beans.factory.annotation.Autowired;
import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
#if(${swagger2})
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
#end
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;
import xyz.iotcode.iadmin.common.vo.IResult;
import lombok.extern.slf4j.Slf4j;
/**
 *  @description : ${entity} 控制器
 *  ---------------------------------
 *   @author ${author}
 *  @since ${date}
 */

#if(${swagger2})
@Api(value="${entity}接口", tags="$!{table.comment}接口")
#end
@Slf4j
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Autowired
    private ${table.serviceName} ${table.entityPath}Service;

    /**
     * @description : 获取分页列表
     * ---------------------------------
     * @author : ${author}
     * @since : Create in ${date}
     */
#if(${swagger2})
    @ApiOperation(value="${table.comment}分页数据接口", nickname="${entity}:page")
#end
    @PostMapping("/list")
    public IResult<IPage<${entity}>> get${entity}Page(${entity}Query query) {
        return IResult.ok(${table.entityPath}Service.ipage(query));
    }

    /**
     * @description : 通过id获取${table.comment}
     * ---------------------------------
     * @author : ${author}
     * @since : Create in ${date}
     */
#if(${swagger2})
    @ApiOperation(value="获取${table.comment}数据接口", nickname="${entity}:get")
#end
    @GetMapping("/get/{id}")
    public IResult<${entity}> get${entity}ById(@PathVariable(value = "id") Integer id) {
        return IResult.ok(${table.entityPath}Service.igetById(id));
    }

    /**
     * @description : 通过id删除${table.comment}
     * ---------------------------------
     * @author : ${author}
     * @since : Create in ${date}
     */
#if(${swagger2})
    @ApiOperation(value="删除${table.comment}数据接口", nickname="${entity}:del")
#end
    @PostMapping("/remove/{id}")
    public IResult delete${entity}ById(@PathVariable(value = "id") String id) {
        List<Integer> list = Arrays.asList(id.split(",")).stream().map(Integer::parseInt).collect(Collectors.toList());
        return IResult.auto(${table.entityPath}Service.iremove(list));
    }

    /**
     * @description : 更新${table.comment}
     * ---------------------------------
     * @author : ${author}
     * @since : Create in ${date}
     */
#if(${swagger2})
    @ApiOperation(value="更新${table.comment}数据接口", nickname="${entity}:update")
#end
    @PostMapping("/update")
    public IResult update${entity}ById(@Validated({Update.class}) ${entity} param) {
        return IResult.auto(${table.entityPath}Service.iupdate(param));
    }

    /**
     * @description : 新增${table.comment}
     * ---------------------------------
     * @author : ${author}
     * @since : Create in ${date}
     */
#if(${swagger2})
    @ApiOperation(value="新增${table.comment}数据接口", nickname="${entity}:add")
#end
    @PostMapping("/add")
    public IResult add${entity}(@Validated({Insert.class}) ${entity} param) {
        return IResult.auto(${table.entityPath}Service.isave(param));
    }
}